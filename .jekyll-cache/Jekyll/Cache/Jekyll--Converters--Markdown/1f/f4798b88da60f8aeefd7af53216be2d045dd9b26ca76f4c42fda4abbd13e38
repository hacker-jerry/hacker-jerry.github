I"o<p>容器类的对象实例成为容器，用于保存对象。</p>

<h1 id="容器">容器</h1>

<p>按照存储的元素形式，按照接口划分为两类：</p>

<h2 id="collection">Collection</h2>
<div class="tip inlineBlock important">包括List，Set，Queue。</div>
<ol>
  <li>List：按照元素被插入时的顺序保存的元素
    <ul>
      <li>ArrayList：性能</li>
      <li>LinkedList</li>
    </ul>
  </li>
  <li>Set：不能有重复元素
    <ul>
      <li>TreeSet：按照比较结果升序保存对象</li>
      <li>HashSet：以最快的速度访问目标存储的元素，不考虑顺序
        <ul>
          <li>LinkedHashSet：按照元素被添加的顺序保存对象</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Queue：按照排队规则确定的元素顺序
    <ul>
      <li>PriorityQueue</li>
    </ul>
  </li>
</ol>

<h2 id="map">Map</h2>
<div class="tip inlineBlock important">一系列由键值对组成的序列，允许通过键查找值</div>
<ul>
  <li>HashMap：最快速度不考虑键值对顺序
    <ul>
      <li>LinkedHashMap：按照键值对插入顺序保存键值对，并将保持接近HashMap的访问速度。</li>
    </ul>
  </li>
  <li>TreeMap：按照键的比较结果升序保存键值对</li>
</ul>

<h1 id="容器具体代码实现">容器具体代码实现</h1>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
</pre></td><td class="rouge-code"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">TestCollection</span> <span class="o">{</span>
    <span class="cm">/**
     *
     * @param col
     * 用fill方法接受所有collection类型的容器，
     * 这些容器都实现了用于添加元素的add方法
     * @return col
     */</span>
    <span class="nc">Collection</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">fill</span><span class="o">(</span><span class="nc">Collection</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">col</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">col</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">"java"</span><span class="o">);</span>
        <span class="n">col</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">"c"</span><span class="o">);</span>
        <span class="n">col</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">"py"</span><span class="o">);</span>
        <span class="k">return</span> <span class="n">col</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="cm">/**
     *
     * @param map
     * 用fill方法接受所有collection类型的容器，
     * 这些类型都能够通过put(key,value)添加键值对
     * 通过get(key)查找键随对应的值
     * @return map
     */</span>
    <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Integer</span><span class="o">&gt;</span> <span class="nf">fill</span><span class="o">(</span><span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">map</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"java"</span><span class="o">,</span> <span class="mi">19</span><span class="o">);</span>
        <span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"c"</span><span class="o">,</span> <span class="mi">22</span><span class="o">);</span>
        <span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"py"</span><span class="o">,</span> <span class="mi">1</span><span class="o">);</span>
        <span class="k">return</span> <span class="n">map</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">TestCollection</span> <span class="n">tc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">TestCollection</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"ArrayList:"</span><span class="o">+</span><span class="n">tc</span><span class="o">.</span><span class="na">fill</span><span class="o">(</span><span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;()));</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"LinkList:"</span><span class="o">+</span><span class="n">tc</span><span class="o">.</span><span class="na">fill</span><span class="o">(</span><span class="k">new</span> <span class="nc">LinkedList</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;()));</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"HashSet:"</span><span class="o">+</span><span class="n">tc</span><span class="o">.</span><span class="na">fill</span><span class="o">(</span><span class="k">new</span> <span class="nc">HashSet</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;()));</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"LinkedHashSet:"</span><span class="o">+</span><span class="n">tc</span><span class="o">.</span><span class="na">fill</span><span class="o">(</span><span class="k">new</span> <span class="nc">LinkedHashSet</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;()));</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"HashMap:"</span><span class="o">+</span><span class="n">tc</span><span class="o">.</span><span class="na">fill</span><span class="o">(</span><span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Integer</span><span class="o">&gt;()));</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"TreeMap:"</span><span class="o">+</span><span class="n">tc</span><span class="o">.</span><span class="na">fill</span><span class="o">(</span><span class="k">new</span> <span class="nc">TreeMap</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Integer</span><span class="o">&gt;()));</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>这里我们</p>
:ET